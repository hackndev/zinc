STRIP ?= @STRIP@
OBJCOPY ?= @OBJCOPY@
OBJDUMP ?= @OBJDUMP@
DEBUG ?= false

CARGO_ROOT ?= @srcdir@

PLATFORM ?= @PLATFORM@
TARGET ?= @TARGET@

$(if $(value EXAMPLE_NAME),, \
	$(error EXAMPLE_NAME must be set))

ifeq "$(DEBUG)" "true"
  PROFILE_OPTION =
  PROFILE = debug
else
  PROFILE_OPTION = --release
  PROFILE = release
endif

# Output directory
OUT_DIR=$(CARGO_ROOT)/target/$(TARGET)/$(PROFILE)
EXAMPLE_DIR=$(OUT_DIR)/examples

BIN_FILE=$(EXAMPLE_DIR)/$(EXAMPLE_NAME).bin
LST_FILE=$(EXAMPLE_DIR)/$(EXAMPLE_NAME).lst
EXAMPLE_FILE=$(EXAMPLE_DIR)/$(EXAMPLE_NAME)

.PHONY: build expand clean listing $(EXAMPLE_FILE)

build: $(BIN_FILE)

expand:
	cd $(CARGO_ROOT)
	cargo rustc --example $(EXAMPLE_NAME) $(PROFILE_OPTION) --target=$(TARGET) \
	      --verbose --features mcu_$(PLATFORM) \
	      -- -Z unstable-options --pretty=expanded

clean:
	cargo clean

listing: $(LST_FILE)

# Target is PHONY so cargo can deal with dependencies
$(EXAMPLE_FILE):
	cd $(CARGO_ROOT)
	cargo build --example $(EXAMPLE_NAME) $(PROFILE_OPTION) --target=$(TARGET) --verbose --features mcu_$(PLATFORM)

$(BIN_FILE): $(EXAMPLE_FILE)
	$(OBJCOPY) -O binary $< $@

$(LST_FILE): $(EXAMPLE_FILE)
	$(OBJDUMP) -D $< > $@
